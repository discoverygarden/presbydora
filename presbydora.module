<?php

/**
 * @file
 * Customization module for Presbyterian Historical Society.
 */

/**
 * Implements hook_block_info().
 */
function presbydora_block_info() {
  $blocks = array();
  $blocks['presbydora_name'] = array(
    'info' => t('PHS Site Name'),
  );
  $blocks['presbydora_donate'] = array(
    'info' => t('PHS Site Donation Button'),
  );
  $blocks['presbydora_metadata_description'] = array(
    'info' => t('Metadata Description'),
  );
  return $blocks;
}

/**
 * Implements hook_theme().
 */
function presbydora_theme($existing, $type, $theme, $path) {
  return array(
    'presbydora_metadata_description' => array(
      'template' => 'theme/presbydora-metadata-description',
      'variables' => array(
        'object' => NULL,
        'metadata' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function presbydora_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'presbydora_name':
      $block['subject'] = 'Presbyterian Historical Society site name';
      $block['content'] = variable_get('site_name', "");
      break;

    case 'presbydora_donate':
      $block['subject'] = 'Presbyterian Historical Society Donate Button';
      $block['content'] = theme_button(
        array(
          "title" => t("Donate"),
          "value" => t("Donate"),
        )
      );
      break;

    case 'presbydora_metadata_description':
      $object = menu_get_object('islandora_object', 2);
      $block['subject'] = t('Islandora Metadata Description');
      $block['content'] = array(
        '#theme' => 'presbydora_metadata_description',
        '#object' => $object,
      );
      break;

  }
  return $block;
}

/**
 * Process variables for vermontdora_metadata_description template.
 *
 * Default template: presbydora-metadata-description.tpl.php
 *
 * @param array $variables
 *   An associative array containing:
 *   - object: The object for which we are being rendered.
 *   - metadata: Either a rendered metadata display or NULL. If NULL, we will
 *     go render it ourselves.
 */
function template_process_presbydora_metadata_description(&$variables) {
  module_load_include('inc', 'islandora', 'includes/metadata');
  if ($variables['metadata'] === NULL && $variables['object']) {
    $variables['metadata'] = islandora_solr_metadata_description_callback($variables['object']);
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function presbydora_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (!empty($data['tabs'])) {
    $object = menu_get_object('islandora_object', '2');
    if ($object && isset($object['MODS']) && islandora_datastream_access(ISLANDORA_METADATA_EDIT, $object['MODS'])) {
      $data['tabs'][0]['output'][] = array(
        '#theme' => 'menu_local_task',
        '#link' => array(
          'title' => t('Edit MODS'),
          'href' => "islandora/object/{$object->id}/datastream/MODS/edit",
          'localized_options' => array(),
          'weight' => 97,
        ),
      );
    }

    $data['tabs'][0]['count'] = $data['tabs'][0]['count'] + 1;

    foreach ($data['tabs'][0]['output'] as &$tab) {
      if ($tab['#link']['title'] === 'IP Embargo') {
        $tab['#link']['weight'] = 98;
      }
      if ($tab['#link']['title'] === 'Print Object') {
        $tab['#link']['weight'] = 99;
      }
      $tab['#weight'] = $tab['#link']['weight'];
    }
  }
}

/**
 * Implements hook_process_islandora_solr_metadata_display().
 */
function presbydora_process_islandora_solr_metadata_display(array &$variables) {
  presbydora_remove_solr_metadata_fields($variables, 'solr_fields');
}

/**
 * Implements hook_process_islandora_solr_metadata_description().
 */
function presbydora_process_islandora_solr_metadata_description(array &$variables) {
  presbydora_remove_solr_metadata_fields($variables, 'description');
}

/**
 * Remove fields from Solr metadata based on datastream access.
 *
 * @param array $variables
 *   Theme variables.
 * @param string $key
 *   The key of the array to remove the fields form.
 */
function presbydora_remove_solr_metadata_fields(&$variables, $key) {
  $object = $variables['islandora_object'];
  $mapping = array(
    'OCR_t' => 'OCR',
    'text_nodes_HOCR_hlt' => 'HOCR',
  );
  foreach ($mapping as $field => $dsid) {
    if (isset($variables[$key][$field])) {
      if (isset($object[$dsid]) && !islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object[$dsid])) {
        unset($variables[$key][$field]);
      }
    }
  }
}

/**
 * Implements hook_form_islandora_scholar_embargo_alter().
 */
function presbydora_form_islandora_scholar_embargo_form_alter(&$form, &$form_state, $form_id) {
  $form['embargo_date']['#after_build'] = array('presbydora_embargo_date_set_year_range');
}

/**
 * Override original year range.
 */
function presbydora_embargo_date_set_year_range($form_element, $form_values) {
  $year = date("Y");
  $form_element['year']['#options'] = drupal_map_assoc(range($year, $year + 500));
  return $form_element;
}

/**
 * Implements hooks_islandora_object_access().
 */
function presbydora_islandora_datastream_access($op, $islandora_datastream, $user) {
  if ($islandora_datastream->id == 'OBJ' || $islandora_datastream->id == 'PDF') {
    $guest = user_role_load_by_name('PHS Guest');
    if (user_is_anonymous() || (isset($guest->rid) && user_has_role($guest->rid, $user))) {
      return FALSE;
    }
  }
}
